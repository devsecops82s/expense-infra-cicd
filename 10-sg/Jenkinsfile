pipeline {
    agent {label 'AGENT-1'}
    environment{
        PROJECT = 'expense'
        COMPONENT = 'backend'
        DEPLOY_TO = 'production'
    }
    options {
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')
    }

    parameters {
         
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
     
       
     }

    stages {
        stage('Init and Plan') {
            steps {
                script{
                     withAWS(region: 'us-east-1', credentials: 'aws-devcreds'){
                        sh """
                            cd 10-sg
                            terraform init -reconfigure
                            terraform plan -out=tfplan
                            
                        """


                     }
                    

                }
                   
                
            }
        }
        stage('Apply or Destroy'){
            input{
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps{
                script{
                    withAWS(region: 'us-east-1', credentials: 'aws-devcreds'){
                        sh """
                            cd 10-sg
                            if [ ${params.ACTION} == 'apply' ]
                            then
                                terraform apply -auto-approve tfplan
                            elif [ ${params.ACTION} == 'destroy']
                            then
                                terraform destroy -auto-approve
                            fi
                            
                        
                        """
                    }
                }
                
            }

        }
        stage ('Destroy VPC') {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps{
                build job: '00-vpc', parameters: [string(name: 'ACTION', value: "destroy")], wait: false
            }
        }
        
        
    }
    post {
        always {
            echo "this section runs always"

        }
        success {
            echo "this section run when pipeline success"
        }
        failure {
            echo "this section run when pipeline failure"
        }
    }
}

